//Определите, сколько обменов сделает алгоритм пузырьковой сортировки по возрастанию для данного массива.
//Формат входных данных :
//
//На первой строке дано целое число n(1 ≤ n ≤ 1000) – количество элементов в массиве.На второй строке – сам массив.Гарантируется, что все элементы массива – различные целые числа, не превышающие по модулю 10 ^ 9.
//Формат выходных данных :
//
//Выведите одно число – количество обменов пузырьковой сортировки.
//Примеры :
//    Входные данные 	Выходные данные
//    3
//    1 2 3 	        0
//    2
//    2 1 	        1
//    4
//    4 1 5 3 	    3

#include <iostream>

const int MAX_NUMBERS = 100;

// функция заполнения массива
void inputNumbers(int* arr, int size) {

	for (size_t i = 0; i < size; i++)
	{
		std::cout << "Значение "<< i + 1 << ": ";
		std::cin >> arr[i];		// ввод значений массива
	}
}

// функция сортировки массива
void sortArr(int* arr, int size)
{
	int swap_counter = 0;
	std::cout << "Сортировка....." << std::endl;
	for (size_t i = 0; i < size; i++)
	{
		for (size_t j = 0; j < size - 1; j++)
		{
			if (arr[j + 1] < arr[j])
			{
				std::swap(arr[j + 1], arr[j]);		// обмен значений в массиве
				swap_counter++;						// увеличиваем счетчик
			}
		}
	}
	std::cout << "Количество обменов в массиве: " << swap_counter << std::endl;
}

int main()
{
	setlocale(LC_ALL, "Rus");

	int arrNumbers[MAX_NUMBERS];	// массив
	int size;						// длина массива
	
	// вводим длину массива
	std::cout << "Введите количество значений: " << std::endl;
	std::cin >> size;

	// ввод чисел в массив
	inputNumbers(arrNumbers, size);

	// сортировка
	sortArr(arrNumbers, size);

}
