#define stop __asm  nop
/*************************************************************
Практическое занятие №2-курс-С110. Функции и динамические массивы
Использование функций, управляющих графическим выводом
*************************************************************/
// В проекте будет использоваться библиотека, которая содержит функции,
//управляющие графическим выводом на экран

//Для того, чтобы воспользоваться этими функциями, необходимо:
//1)В рабочий какталог проекта копировать файлы:
// GraphicsLib.h - содержит объявление функций
// GraphicsLib.lib - статическая библиотека, содержащая функции, управляющие графическим выводом 
// demo.exe - оконное приложение, отображением которого будем управлять с помощью функций библиотеки GraphicsLib.lib
//
//2) В проект добавить заголовочный файл GraphicsLib.h и файл библиотеки GraphicsLib.lib
//
//3) С помощью функций библиотеки  решить следующие задачи, например:
// 3.1 "Очистка" игрового поля (закраска цветом EMPTY) 
// 3.2 Рисование диагоналей прямоугольника
// 3.4 Рисование "концентрических" прямоугольников
// 3.4 Рисование  спирали
// 3.5 Рисование  закрашенных треугольников, ограниченных диагоналями и сторонами прямоугольника
// 3.6  и т.д. (творчество  приветствуется!)
// ИЛИ
//4) С помощью функций библиотеки разработать игровую программу с графическим интерфейсом "Змейка". Описание программы в отдельном файле.


// можно определить задержку отображения

#include <iostream>
#include "GraphicsLib.h"
int main()
{
	//Запуск процесса demo.exe 
	StartDemo();
	
	std::cout << "Press any key\n";
	std::cin.get();
	//Задание размерностей двухмерного массива
	int n = 10, m = 10;
	SetDimensions(n, m);

	// Определение динамического двумерного массива (1-й способ)
	int *p = new int[n*m];
	int **pp = new int*[n];
	for (size_t i = 0; i < n; i++)
	{
		pp[i] = p + i * m;
	}
	//
	// Формирование значений динамического двумерного массива 
	// заполнение массива цветными шариками
	for (size_t i = 0; i < n; i++)
	{
		for (size_t j = 0; j < m; j++)
		{
			pp[i][j] = EMPTY;
		}
	}
		
	//Отрисовка шариков
	DrawBalls(p, n, m);
	pause(1000);
	pp[4][4] = RED;
	DrawBalls(p, n, m);
	std::cout << "FinishDemo\n";
	std::cin.get();
	//Завершение процесса

	FinishDemo();
	
}

 